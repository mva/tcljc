(ns tcljc.array-test
  (:require [tcljc.bootstrap :refer [asm-expr call-expr]]
            [tinyclj.alpha.ptest :refer :all]))

(deftest make-array-test
  (is (= '[(ICONST_2)
           (ANEWARRAY "Object[]")
           (ARETURN)]
         (asm-expr (new objects 2)))))

(deftest alength-test
  (is (= '[["LOCAL 0: Object[] a"]
           (ALOAD_0)
           (ARRAYLENGTH)
           (IRETURN)]
         (asm-expr [^objects a] (alength a))))
  (is (= '[["LOCAL 0: boolean[] a"]
           (ALOAD_0)
           (ARRAYLENGTH)
           (IRETURN)]
         (asm-expr [^booleans a] (alength a)))))

(deftest array-get-test
  (is (= '[["LOCAL 0: Object[] a"]
           (ALOAD_0)
           (ICONST_0)
           (AALOAD)
           (ARETURN)]
         (asm-expr [^objects a] (aget a 0))))
  (is (= '[["LOCAL 0: double[] a"]
           (ALOAD_0)
           (ICONST_0)
           (DALOAD)
           (DRETURN)]
         (asm-expr [^doubles a] (aget a 0))))
  
  (is (= '[(ICONST_2)
           (ICONST_3)
           (MULTIANEWARRAY "Object[][]" 2)
           (ICONST_0)
           (AALOAD)
           (ICONST_1)
           (AALOAD)
           (ARETURN)]
         (asm-expr (aget (new "[[Ljava.lang.Object;" 2 3) 0 1)))))

(deftest array-set-test
  (is (= '[["LOCAL 0: Object[] a"]
           (ALOAD_0)
           (ICONST_0)
           (ACONST_NULL)
           (DUP_X2)
           (AASTORE)
           (ARETURN)]
         (asm-expr [^objects a] (aset a 0 nil))))
  (is (= '[["LOCAL 0: double[] a"]
           (ALOAD_0)
           (ICONST_0)
           (DCONST_1)
           (DUP2_X2)
           (DASTORE)
           (DRETURN)]
         (asm-expr [^doubles a] (aset a 0 1.0))))
  (is (= '[["LOCAL 0: double[] a"]
           (ALOAD_0)
           (ICONST_0)
           (DCONST_1)
           (DASTORE)
           (RETURN)]
         (asm-expr ^void [^doubles a] (aset a 0 1.0))))

  (is (= '[(ICONST_2)
           (ICONST_3)
           (MULTIANEWARRAY "Object[][]" 2)
           (ICONST_0)
           (AALOAD)
           (ICONST_1)
           (ACONST_NULL)
           (DUP_X2)
           (AASTORE)
           (ARETURN)]
         (asm-expr (aset (new "[[Ljava.lang.Object;" 2 3) 0 1 nil)))))
